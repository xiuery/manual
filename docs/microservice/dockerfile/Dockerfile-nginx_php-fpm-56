FROM 10.0.0.119:8082/library/php:5.6-fpm
LABEL author=xiuery

# 安装php库
RUN docker-php-ext-install mysql \
	&& docker-php-ext-install pdo_mysql \
	&& docker-php-ext-install mysqli \
	&& pecl install redis-4.0.1 \
	&& docker-php-ext-enable redis
RUN apt-get update && apt-get install -y \
		libfreetype6-dev \
		libjpeg62-turbo-dev \
		libpng-dev \
	&& docker-php-ext-install -j$(nproc) iconv \
	&& docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \
	&& docker-php-ext-install -j$(nproc) gd

# 安装nginx
ENV NGINX_VERSION=1.14.2-1~stretch
ENV NJS_VERSION=1.14.2.0.2.6-1~stretch

RUN /bin/sh -c set -x \
    && apt-get update \
    && apt-get install --no-install-recommends --no-install-suggests -y gnupg1 apt-transport-https ca-certificates \
    && NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62 \
    && found=''; \
        for server in \
            ha.pool.sks-keyservers.net \
            hkp://keyserver.ubuntu.com:80 \
            hkp://p80.pool.sks-keyservers.net:80 \
            pgp.mit.edu \
        ; do \
            echo "Fetching GPG key $NGINX_GPGKEY from $server"; \
            apt-key adv --keyserver "$server" --keyserver-options timeout=10 --recv-keys "$NGINX_GPGKEY" && found=yes && break; \
        done; \
        test -z "$found" && echo >&2 "error: failed to fetch GPG key $NGINX_GPGKEY" && exit 1; \
        apt-get remove --purge --auto-remove -y gnupg1 \
    && rm -rf /var/lib/apt/lists/* \
    && dpkgArch="$(dpkg --print-architecture)" \
    && nginxPackages=" 		nginx=${NGINX_VERSION} 		nginx-module-xslt=${NGINX_VERSION} 		nginx-module-geoip=${NGINX_VERSION} 		nginx-module-image-filter=${NGINX_VERSION} 		nginx-module-njs=${NJS_VERSION} 	" \
    && case "$dpkgArch" in amd64 | i386) echo "deb https://nginx.org/packages/debian/ stretch nginx" >>/etc/apt/sources.list.d/nginx.list \
    && apt-get update ;; *) echo "deb-src https://nginx.org/packages/debian/ stretch nginx" >>/etc/apt/sources.list.d/nginx.list \
    && tempDir="$(mktemp -d)" \
    && chmod 777 "$tempDir" \
    && savedAptMark="$(apt-mark showmanual)" \
    && apt-get update \
    && apt-get build-dep -y $nginxPackages \
    && (cd "$tempDir" && DEB_BUILD_OPTIONS="nocheck parallel=$(nproc)" apt-get source --compile $nginxPackages) \
    && apt-mark showmanual | xargs apt-mark auto >/dev/null \
    && { [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark; } \
    && ls -lAFh "$tempDir" \
    && (cd "$tempDir" && dpkg-scanpackages . >Packages) \
    && grep '^Package: ' "$tempDir/Packages" \
    && echo "deb [ trusted=yes ] file://$tempDir ./" >/etc/apt/sources.list.d/temp.list \
    && apt-get -o Acquire::GzipIndexes=false update  \
    ;; esac \
    && apt-get install --no-install-recommends --no-install-suggests -y $nginxPackages gettext-base \
    && apt-get remove --purge --auto-remove -y apt-transport-https ca-certificates \
    && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list \
    && if [ -n "$tempDir" ]; then apt-get purge -y --auto-remove \
    && rm -rf "$tempDir" /etc/apt/sources.list.d/temp.list \
    ; fi \
    && ln -sf /dev/stdout /var/log/nginx/access.log \
    && ln -sf /dev/stderr /var/log/nginx/error.log

# 安装supervisord
RUN apt-get update && apt-get install -y supervisor
ENV LOG_DIR_SUPERVISOR /var/log/supervisor
RUN mkdir -p $LOG_DIR_SUPERVISOR
COPY ./docker/supervisord/supervisord.conf /etc/supervisord.conf

EXPOSE 80 9000
STOPSIGNAL SIGTERM
ENTRYPOINT ["/usr/bin/supervisord", "-n", "-c", "/etc/supervisord.conf"]

# build
# docker build -t="10.0.0.119:8082/base/nginx-php-fpm:version" .
